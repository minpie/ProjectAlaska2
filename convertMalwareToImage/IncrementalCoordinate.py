from PIL import Image
import sys
import math
import os


# Messages:
MSG_Usage = """
Usage:

"""


# 변수 / 객체 / etc :
inputFileName = "" # 이미지화 대상 파일
outputFileName = "" # 저장할 이미지 파일
inputFileObject = None # 이미지화 대상 파일 객체
outputImageObject = None # 저장할 이미지에 해당하는 객체
imageWidth = 256 # 이미지 폭
imageHeight = 256 # 이미지 높이
currentBytes = 0 # 현재 읽고 있는 데이터
countBytes = 0 # 작업중인 데이터 카운터
inputFileSize = 0 # 입력파일 크기
imageDataArray = None # 이미지에 해당하는 2차원 배열


# Main code:
if(len(sys.argv) == 1):
    print(MSG_Usage)
    sys.exit()
# 

inputFileName = sys.argv[1]
outputFileName = sys.argv[2]


# 이미지 객체 생성:
outputImageObject = Image.new(mode="RGB", size=(imageWidth, imageHeight)) # 파일 객체 생성



# 이미지 담을 배열 초기화:
imageDataArray = [[0] * imageWidth] * imageHeight


# 입력 파일 작업:
inputFileSize = os.path.getsize(inputFileName) # 파일 크기 측정
inputFileObject = open(inputFileName, "rb") # byte 모드로 열기


for i in range(0, inputFileSize, 2):
    currentBytes = inputFileObject.read(1) # 1바이트 읽기
    curX = ord(currentBytes) # x좌표
    
    currentBytes = inputFileObject.read(1) # 1바이트 읽기
    curY = ord(currentBytes) # y좌표
    
    # 픽셀 지정:
    imageDataArray[curX][curY] += 1
    countBytes += 2 # 위치 카운터 증가


# 픽셀 값 지정:
for i in range(imageHeight):
    for j in range(imageWidth):
        valR = imageDataArray[i][j] % 256
        valG = int(imageDataArray[i][j] / 3) % 256
        valB = int(imageDataArray[i][j] / 7) % 256   
        outputImageObject.putpixel((i, j), (valR, valG, valB)) # 한 픽셀 지정


# 이미지로 저장:
outputImageObject.save(outputFileName) # 이미지로 저장